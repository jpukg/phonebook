<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:mail="http://www.springframework.org/schema/integration/mail"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/integration
                                 http://www.springframework.org/schema/integration/spring-integration.xsd
                                 http://www.springframework.org/schema/integration/mail
                                 http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
                                 http://www.springframework.org/schema/context
                                 http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:mail.properties"/>

    <gateway id="resetPasswordService"
             service-interface="it.valeriovaudi.service.PasswordService"/>

    <channel id="createNonceServiceMainRequestChannel"/>

    <chain id="createNonceChain"
            input-channel="createNonceServiceMainRequestChannel"
            output-channel="sendMai4ResetPasswordMainRequestChannel">
        <service-activator expression="@phonBookUserRepository.findByUserName(payload)" requires-reply="true"/>
        <service-activator expression="@nonceFactoryByUser.getNonce(payload)" requires-reply="true"/>
        <service-activator expression="@nonceRepository.save(payload)" requires-reply="true"/>
        <service-activator expression="T(java.lang.String).format('${mail.resetpassword.messageformat}' ,payload.nonce)" requires-reply="true"/>
        <mail:header-enricher>
            <mail:from value="${mail.admin}"/>
            <mail:to expression="headers['mail']"/>
            <mail:subject value="${mail.resetpassword.subject}"/>
        </mail:header-enricher>
    </chain>

    <channel id="sendMai4ResetPasswordMainRequestChannel"/>

    <mail:outbound-channel-adapter channel="sendMai4ResetPasswordMainRequestChannel"
                                   mail-sender="mailSender"/>

    <channel id="restetPasswordServiceMainRequestChannel"/>
    <channel id="restetPasswordServiceMainResponseChannel"/>

    <chain id="resetPasswordChain"
           input-channel="restetPasswordServiceMainRequestChannel"
            output-channel="singUpPhoneBoockUserMainResponseChannel">
        <service-activator expression="@nonceRepository.findByNonce(payload)" requires-reply="true"/>
        <service-activator expression="@phonBookUserRepository.findByUserName(payload.userName)" requires-reply="true"/>
        <service-activator expression="@phoneBookUserBuilder.buildByPhoneBookUserBuilder(payload).buildPassword(headers['password']).buildPhoneBookUser()" requires-reply="true"/>
        <service-activator expression="@phonBookUserRepository.save(payload)" requires-reply="true"/>
    </chain>

</beans:beans>
